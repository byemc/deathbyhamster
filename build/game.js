const log=(t,s)=>{console.log(`[${t}] ${s}`)},fontStack='"Comic Sans MS"';var bullets=[],hitboxes=[];class Canvas{constructor(t){this.canvas=document.getElementById(t),this.ctx=this.canvas.getContext("2d"),this.width=this.canvas.width,this.height=this.canvas.height,this.realWidth=640,this.realHeight=480,this.mousePos={x:0,y:0},this.camera={x:0,y:0}}fill(t){this.ctx.fillStyle=t,this.ctx.fillRect(0,0,this.width,this.height)}getMousePos(t){let s=this.canvas.getBoundingClientRect();this.mousePos.x=(t.clientX-s.left)/2,this.mousePos.y=(t.clientY-s.top)/2,document.getElementById("mousePos").innerHTML=`${this.mousePos.x}, ${this.mousePos.y}`}drawImg(t,s,a,e,i){this.ctx.drawImage(t,s-this.camera.x,a-this.camera.y,e,i)}drawRect(t,s,a,e,i){this.ctx.fillStyle=i,this.ctx.fillRect(t-this.camera.x,s-this.camera.y,a,e)}drawText(t,s,a,e){this.ctx.fillStyle=e,this.ctx.fillText(t,s-this.camera.x,a-this.camera.y)}setFont(t=t,s="10"){this.ctx.font=`${s}px ${t}`}drawLine(t,s,a,e,i){this.ctx.strokeStyle=i,this.ctx.beginPath(),this.ctx.moveTo(t-this.camera.x,s-this.camera.y),this.ctx.lineTo(a,e),this.ctx.stroke()}mvCamera(t,s){this.camera.x+=t,this.camera.y+=s}setCamera(t,s){this.camera.x=t,this.camera.y=s}}class Hitbox{constructor(t,s,a,e,i=null){this.x=t,this.y=s,this.w=a,this.h=e,this.owner=i}collides(t){return this.x<t.x+t.w&&this.x+this.w>t.x&&this.y<t.y+t.h&&this.h+this.y>t.y}}class Hamster{constructor(t="",s=0,a=0){this.name=t,this.velocity={x:1,y:0},this.maxVelocity={x:2,y:2},this.trueX=s,this.trueY=a,this.x=this.trueX-canvas.camera.x,this.y=this.trueY-canvas.camera.y,this.aim={x:0,y:0}}update(){this.trueX+=this.velocity.x,this.trueY+=this.velocity.y,this.x=this.trueX-canvas.camera.x,this.y=this.trueY-canvas.camera.y,this.velocity.x*=.9,this.velocity.y*=.9,this.aim.x=canvas.mousePos.x,this.aim.y=canvas.mousePos.y,this.aim.angle=Math.atan2(this.aim.y-this.y-10,this.aim.x-this.x-10),document.getElementById("truexy").innerText=`${this.trueX}, ${this.trueY}`,document.getElementById("hamxy").innerText=`${this.x}, ${this.y}`}increaseVelocity(t,s){this.velocity.x+=t,this.velocity.y+=s,this.velocity.x>this.maxVelocity.x&&(this.velocity.x=this.maxVelocity.x),this.velocity.y>this.maxVelocity.y&&(this.velocity.y=this.maxVelocity.y)}draw(t){t.drawRect(this.x,this.y,20,20,"red"),t.drawText(this.name,this.x,this.y-10,"white"),t.drawLine(this.x+10,this.y+10,this.x+10+10*Math.cos(this.aim.angle),this.y+10+10*Math.sin(this.aim.angle),"white")}shoot(t){let s=new Bullet(this.x+10,this.y+10,this.aim.angle,.1);bullets.push(s)}}class Human{constructor(t,s=0,a=0){this.scared=t,this.velocity={x:1,y:0},this.maxVelocity={x:2,y:2},this.trueX=s,this.trueY=a,this.velocity={x:0,y:0},this.x=this.trueX-canvas.camera.x,this.y=this.trueY-canvas.camera.y,this.targX=Math.floor(1e3*Math.random()),this.targY=Math.floor(1e3*Math.random()),this.humanID=Math.floor(1e6*Math.random()),this.speed=.1,this.hitbox=new Hitbox(this.x,this.y,20,20,`human${this.humanID}`),hitboxes.push(this.hitbox)}update(){Math.abs(this.trueX-this.targX)<10&&Math.abs(this.trueY-this.targY)<10&&(this.targX=Math.floor(1e3*Math.random()),this.targY=Math.floor(1e3*Math.random())),this.trueX<this.targX&&(this.trueX+=this.speed),this.trueX>this.targX&&(this.trueX-=this.speed),this.trueY<this.targY&&(this.trueY+=this.speed),this.trueY>this.targY&&(this.trueY-=this.speed),this.x=this.trueX-canvas.camera.x,this.y=this.trueY-canvas.camera.y}draw(t){t.drawRect(this.x,this.y,20,20,"blue"),t.drawText(`human${this.humanID}`,this.x,this.y-10,"white")}die(){hitboxes.splice(hitboxes.indexOf(this.hitbox),1),humans.splice(humans.indexOf(this),1),canvas.setFont("Arial","20"),canvas.ctx.textAliign="center",canvas.drawText("Kill!",this.x,this.y,"red"),canvas.setFont(fontStack)}}class Bullet{constructor(t,s,a,e){this.direction=t,this.trueX=s,this.trueY=a,this.x=s-canvas.camera.x,this.y=a-canvas.camera.y,this.velocity=e,this.hitbox=new Hitbox(this.x,this.y,10,10,"bullet")}update(){this.trueX+=Math.cos(this.direction)*this.velocity,this.trueY+=Math.sin(this.direction)*this.velocity,this.hitbox.x=this.trueX-canvas.camera.x,this.hitbox.y=this.trueY-canvas.camera.y,this.x=this.trueX-canvas.camera.x,this.y=this.trueY-canvas.camera.y;for(let t=0;t<hitboxes.length;t++)if(this.hitbox.collides(hitboxes[t])){bullets.splice(bullets.indexOf(this),1);for(let s=0;s<humans.length;s++)humans[s].hitbox.id==hitboxes[t].id&&humans[s].die()}}draw(t){t.drawRect(this.trueX,this.trueX,2,3,"white")}}var canvas=new Canvas("gameCanvas");null==canvas.ctx&&(log("ERROR","Could not initialize canvas"),alert("Your browser doesn't support canvas. Most modern browsers support it, so please upgrade to IE 9 or newer.")),gameCtx=canvas.ctx,canvas.fill("#1c1c1c"),canvas.setFont(fontStack),gameCtx.imageSmoothingEnabled=!1;var player=new Hamster("Player",canvas.width/2,canvas.height/2),humans=[];player.draw(canvas);var keys={};document.addEventListener("keydown",function(t){keys[t.code]=!0}),document.addEventListener("keyup",function(t){keys[t.code]=!1}),canvas.canvas.addEventListener("mousemove",function(t){mousePos=canvas.getMousePos(t)}),canvas.canvas.addEventListener("mousedown",function(t){player.shoot(t)});for(var i=0;i<5;i++){var human=new Human(!1,Math.random()*canvas.width,Math.random()*canvas.height,Math.random()*canvas.width,Math.random()*canvas.height);humans.push(human)}var frames=0,gameStart=!1,gameLoop=setInterval(()=>{if(canvas.fill("#1c1c1c"),canvas.drawText(frames,10,10,"red"),++frames>30&&(gameStart=!0),gameStart){keys.ArrowUp&&player.increaseVelocity(0,-.3),keys.ArrowDown&&player.increaseVelocity(0,.3),keys.ArrowLeft&&player.increaseVelocity(-.3,0),keys.ArrowRight&&player.increaseVelocity(.3,0),keys.KeyW&&(canvas.camera.y-=1),keys.KeyS&&(canvas.camera.y+=1),keys.KeyA&&(canvas.camera.x-=1),keys.KeyD&&(canvas.camera.x+=1),player.update();for(var t=0;t<humans.length;t++)humans[t].update();for(t=0;t<humans.length;t++)humans[t].draw(canvas);player.draw(canvas);for(t=0;t<bullets.length;t++)bullets[t].update(),bullets[t].draw(canvas);document.getElementById("dbg_camera").innerText=`x: ${canvas.camera.x}, y: ${canvas.camera.y}`;for(t=0;t<bullets.length;t++)for(var s=0;s<humans.length;s++)bullets[t].hitbox.collides(humans[s].hitbox)&&(bullets.splice(bullets.indexOf(bullets[t]),1),humans.splice(humans.indexOf(humans[s]),1))}},1e3/60);